================================================================
Repopack Output File
================================================================

This file was generated by Repopack on: 2024-08-23T10:19:04.851Z

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This header section
2. Repository structure
3. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
1. This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
2. When processing this file, use the separators and "File:" markers to
  distinguish between different files in the repository.
3. Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.



For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
public/
  index.html
src/
  components/
    CouponList.js
    CouponPage.js
    CouponSystem.js
    Dashboard.js
    Footer.js
    Header.js
    QRscanner.js
    RestaurantCard.js
    RestaurantDashboard.js
    RestaurantList.js
    ReviewForm.js
    ReviewList.js
  context/
    AuthContext.js
  utils/
    api.js
  App.js
  index.css
  index.js
package.json

================================================================
Repository Files
================================================================

================
File: public/index.html
================
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Restaurant Review Application"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <title>Restaurant Reviews</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  </body>
</html>

================
File: src/components/CouponList.js
================
// src/components/CouponList.js
import React, { useState, useEffect } from 'react';
import api from '../utils/api';

function CouponList() {
  const [coupons, setCoupons] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchCoupons = async () => {
      try {
        setLoading(true);
        const response = await api.get('/coupons/user');
        setCoupons(response.data);
        setLoading(false);
      } catch (err) {
        setError('Failed to fetch coupons. Please try again later.');
        setLoading(false);
        console.error('Error fetching coupons:', err);
      }
    };

    fetchCoupons();
  }, []);

  if (loading) return <div>Loading coupons...</div>;
  if (error) return <div>{error}</div>;

  return (
    <div className="coupon-list">
      <h3>Your Coupons</h3>
      {coupons.length === 0 ? (
        <p>You don't have any coupons yet. Write a review to earn coupons!</p>
      ) : (
        coupons.map(coupon => (
          <div key={coupon._id} className="coupon">
            <h4>Discount: {coupon.discount}% off</h4>
            <p>Code: <strong>{coupon.code}</strong></p>
            <p>Valid until: {new Date(coupon.expiresAt).toLocaleDateString()}</p>
            <p>Status: {coupon.isUsed ? 'Used' : 'Available'}</p>
          </div>
        ))
      )}
    </div>
  );
}

export default CouponList;

================
File: src/components/CouponPage.js
================
import React, { useState, useEffect } from 'react';

function CouponPage() {
  const [coupon, setCoupon] = useState(null);

  useEffect(() => {
    // Generate or fetch a coupon
    generateCoupon();
  }, []);

  const generateCoupon = () => {
    // This would typically involve an API call to your backend
    const newCoupon = {
      code: 'REVIEW10',
      discount: '10%',
      expiryDate: '2023-12-31'
    };
    setCoupon(newCoupon);
  };

  return (
    <div>
      <h2>Thank You for Your Review!</h2>
      {coupon ? (
        <div>
          <h3>Here's your coupon:</h3>
          <p>Code: {coupon.code}</p>
          <p>Discount: {coupon.discount}</p>
          <p>Valid until: {coupon.expiryDate}</p>
        </div>
      ) : (
        <p>Loading your coupon...</p>
      )}
    </div>
  );
}

export default CouponPage;

================
File: src/components/CouponSystem.js
================
// src/components/CouponSystem.js
import React, { useState, useEffect } from 'react';
import axios from 'axios';

function CouponSystem() {
  const [coupons, setCoupons] = useState([]);
  const [couponCode, setCouponCode] = useState('');
  const [redeemMessage, setRedeemMessage] = useState('');

  useEffect(() => {
    const fetchCoupons = async () => {
      try {
        const response = await axios.get('/api/coupons/user/user-id'); // Replace with actual user ID
        setCoupons(response.data);
      } catch (error) {
        console.error('Error fetching coupons:', error);
      }
    };
    fetchCoupons();
  }, []);

  const handleRedeem = async () => {
    try {
      const response = await axios.post('/api/coupons/redeem', { code: couponCode });
      setRedeemMessage(response.data.message);
      setCouponCode('');
      // Refresh coupons list
      const updatedCoupons = await axios.get('/api/coupons/user/user-id'); // Replace with actual user ID
      setCoupons(updatedCoupons.data);
    } catch (error) {
      setRedeemMessage('Error redeeming coupon. Please try again.');
      console.error('Error redeeming coupon:', error);
    }
  };

  return (
    <div className="coupon-system">
      <h2>Your Coupons</h2>
      <div className="coupon-list">
        {coupons.map((coupon) => (
          <div key={coupon._id} className="coupon">
            <p>Code: {coupon.code}</p>
            <p>Discount: {coupon.discount}%</p>
            <p>Expires: {new Date(coupon.expiresAt).toLocaleDateString()}</p>
            <p>Status: {coupon.isUsed ? 'Used' : 'Available'}</p>
          </div>
        ))}
      </div>
      <div className="redeem-coupon">
        <h3>Redeem a Coupon</h3>
        <input
          type="text"
          value={couponCode}
          onChange={(e) => setCouponCode(e.target.value)}
          placeholder="Enter coupon code"
        />
        <button onClick={handleRedeem}>Redeem</button>
        {redeemMessage && <p>{redeemMessage}</p>}
      </div>
    </div>
  );
}

export default CouponSystem;

================
File: src/components/Dashboard.js
================
// src/components/Dashboard.js
import React, { useState, useEffect, useContext } from 'react';
import { AuthContext } from '../context/AuthContext';
import api from '../utils/api';

function Dashboard() {
  const [restaurants, setRestaurants] = useState([]);
  const { user } = useContext(AuthContext);

  useEffect(() => {
    const fetchRestaurants = async () => {
      try {
        const response = await api.get('/restaurants/owner');
        setRestaurants(response.data);
      } catch (error) {
        console.error('Error fetching restaurants', error);
      }
    };

    if (user && user.role === 'restaurant_owner') {
      fetchRestaurants();
    }
  }, [user]);

  if (user.role !== 'restaurant_owner') {
    return <div>Access denied. Only restaurant owners can view this dashboard.</div>;
  }

  return (
    <div className="dashboard">
      <h2>Restaurant Owner Dashboard</h2>
      {restaurants.map(restaurant => (
        <div key={restaurant._id} className="dashboard-restaurant">
          <h3>{restaurant.name}</h3>
          <p>Average Rating: {restaurant.averageRating.toFixed(1)}</p>
          <p>Total Reviews: {restaurant.reviewCount}</p>
          <button onClick={() => {/* Add logic to view detailed stats */}}>View Detailed Stats</button>
        </div>
      ))}
    </div>
  );
}

export default Dashboard;

================
File: src/components/Footer.js
================
import React from 'react';
import { Link } from 'react-router-dom';
import { useAuth } from '../context/AuthContext';

function Footer() {
  const { user, logout } = useAuth();

  return (
    <footer>
      <nav>
        <ul>
          <li><Link to="/">Home</Link></li>
          {user ? (
            <>
              <li><Link to="/profile">Profile</Link></li>
              <li><button onClick={logout}>Logout</button></li>
            </>
          ) : (
            <>
              <li><Link to="/login">Login</Link></li>
              <li><Link to="/register">Register</Link></li>
            </>
          )}
        </ul>
      </nav>
    </footer>
  );
}

export default Footer;

================
File: src/components/Header.js
================
import React from 'react';
import { Link } from 'react-router-dom';
import { useAuth } from '../context/AuthContext';

function Header() {
  const { user, logout } = useAuth();

  return (
    <header>
      <nav>
        <ul>
          <li><Link to="/">Home</Link></li>
          {user ? (
            <>
              <li><Link to="/profile">Profile</Link></li>
              <li><Link to="/scan">Scan QR</Link></li>
              {user.role === 'restaurant_owner' && (
                <li><Link to="/dashboard">Dashboard</Link></li>
              )}
              <li><button onClick={logout}>Logout</button></li>
            </>
          ) : (
            <>
              <li><Link to="/login">Login</Link></li>
              <li><Link to="/register">Register</Link></li>
            </>
          )}
        </ul>
      </nav>
    </header>
  );
}

export default Header;

================
File: src/components/QRscanner.js
================
import React, { useState, useRef } from 'react';
import { useNavigate } from 'react-router-dom';
import Webcam from 'react-webcam';
import api from '../utils/api';

function QRScanner() {
  const [qrCode, setQrCode] = useState('');
  const [error, setError] = useState('');
  const navigate = useNavigate();
  const webcamRef = useRef(null);

  const captureQR = async () => {
    const imageSrc = webcamRef.current.getScreenshot();
    try {
      const response = await api.post('/qr/process', { image: imageSrc });
      const { qrData } = response.data;
      setQrCode(qrData);
      navigate(`/restaurant/${qrData}`);
    } catch (error) {
      setError('Error processing image. Please try again.');
      console.error(error);
    }
  };

  return (
    <div className="qr-scanner max-w-md mx-auto bg-white p-6 rounded-lg shadow-md">
      <h2 className="text-2xl font-bold mb-4 text-center">Scan Restaurant QR Code</h2>
      <div className="mb-4">
        <Webcam
          ref={webcamRef}
          screenshotFormat="image/jpeg"
          className="w-full rounded"
        />
      </div>
      <button 
        onClick={captureQR}
        className="w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
      >
        Capture QR Code
      </button>
      {qrCode && <p className="mt-4 text-center">QR Code scanned: {qrCode}</p>}
      {error && <p className="mt-4 text-red-500 text-center">{error}</p>}
    </div>
  );
}

export default QRScanner;

================
File: src/components/RestaurantCard.js
================
// src/components/RestaurantCard.js
import React from 'react';

function RestaurantCard({ restaurant }) {
  return (
    <div className="restaurant-card">
      <h3>{restaurant.name}</h3>
      <p>{restaurant.address}</p>
      <p>Average Rating: {restaurant.averageRating.toFixed(1)}</p>
      <p>Reviews: {restaurant.reviewCount}</p>
    </div>
  );
}

export default RestaurantCard;

================
File: src/components/RestaurantDashboard.js
================
// src/components/RestaurantDashboard.js
import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import axios from 'axios';

function RestaurantDashboard() {
  const [restaurant, setRestaurant] = useState(null);
  const [reviews, setReviews] = useState([]);
  const [summary, setSummary] = useState({ positive: [], negative: [] });
  const { restaurantId } = useParams();

  useEffect(() => {
    const fetchData = async () => {
      try {
        const restaurantResponse = await axios.get(`/api/restaurants/${restaurantId}`);
        setRestaurant(restaurantResponse.data);

        const reviewsResponse = await axios.get(`/api/reviews/restaurant/${restaurantId}`);
        setReviews(reviewsResponse.data);

        const summaryResponse = await axios.get(`/api/reviews/summary/${restaurantId}`);
        setSummary(summaryResponse.data);
      } catch (error) {
        console.error('Error fetching dashboard data:', error);
      }
    };
    fetchData();
  }, [restaurantId]);

  return (
    <div className="restaurant-dashboard">
      <h2>{restaurant?.name} Dashboard</h2>
      <div className="summary">
        <h3>Review Summary</h3>
        <div className="positive">
          <h4>Positive Aspects</h4>
          <ul>
            {summary.positive.map((item, index) => (
              <li key={index}>{item}</li>
            ))}
          </ul>
        </div>
        <div className="negative">
          <h4>Areas for Improvement</h4>
          <ul>
            {summary.negative.map((item, index) => (
              <li key={index}>{item}</li>
            ))}
          </ul>
        </div>
      </div>
      <div className="reviews">
        <h3>Recent Reviews</h3>
        {reviews.map((review) => (
          <div key={review._id} className="review">
            <p>Rating: {review.rating}/5</p>
            <p>{review.text}</p>
            <p>Sentiment: {review.sentiment > 0 ? 'Positive' : review.sentiment < 0 ? 'Negative' : 'Neutral'}</p>
          </div>
        ))}
      </div>
    </div>
  );
}

export default RestaurantDashboard;

================
File: src/components/RestaurantList.js
================
// src/components/RestaurantList.js
import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import api from '../utils/api';
import RestaurantCard from './RestaurantCard';

function RestaurantList() {
  const [restaurants, setRestaurants] = useState([]);

  useEffect(() => {
    const fetchRestaurants = async () => {
      try {
        const response = await api.get('/restaurants');
        setRestaurants(response.data);
      } catch (error) {
        console.error('Error fetching restaurants', error);
      }
    };
    fetchRestaurants();
  }, []);

  return (
    <div className="restaurant-list">
      <h2>Restaurants</h2>
      {restaurants.map(restaurant => (
        <Link to={`/restaurant/${restaurant._id}`} key={restaurant._id}>
          <RestaurantCard restaurant={restaurant} />
        </Link>
      ))}
    </div>
  );
}

export default RestaurantList;

================
File: src/components/ReviewForm.js
================
// src/components/ReviewForm.js
import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import axios from 'axios';
import { useAuth } from '../context/AuthContext';


function ReviewForm() {
  const [rating, setRating] = useState(0);
  const [review, setReview] = useState('');
  const [restaurant, setRestaurant] = useState(null);
  const [submitted, setSubmitted] = useState(false);
  const [coupon, setCoupon] = useState(null);
  const { restaurantId } = useParams();

  useEffect(() => {
    const fetchRestaurant = async () => {
      try {
        const response = await axios.get(`/api/restaurants/${restaurantId}`);
        setRestaurant(response.data);
      } catch (error) {
        console.error('Error fetching restaurant:', error);
      }
    };
    fetchRestaurant();
  }, [restaurantId]);

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await axios.post('/api/reviews', { restaurantId, rating, review });
      const couponResponse = await axios.post('/api/coupons/generate', { userId: 'user-id' }); // Replace with actual user ID
      setSubmitted(true);
      setCoupon(couponResponse.data);
    } catch (error) {
      console.error('Error submitting review:', error);
    }
  };

  if (submitted) {
    return (
      <div className="review-submitted">
        <h2>Thank you for your review!</h2>
        {coupon && (
          <div className="coupon">
            <h3>Your Coupon</h3>
            <p>Code: {coupon.code}</p>
            <p>Discount: {coupon.discount}%</p>
            <p>Valid until: {new Date(coupon.expiresAt).toLocaleDateString()}</p>
          </div>
        )}
      </div>
    );
  }

  return (
    <div className="review-form">
      <h2>Review {restaurant?.name}</h2>
      <form onSubmit={handleSubmit}>
        <div className="rating">
          {[1, 2, 3, 4, 5].map((star) => (
            <span
              key={star}
              onClick={() => setRating(star)}
              style={{ cursor: 'pointer', color: star <= rating ? 'gold' : 'gray' }}
            >
              ★
            </span>
          ))}
        </div>
        <textarea
          value={review}
          onChange={(e) => setReview(e.target.value)}
          placeholder="Write your review here..."
          required
        />
        <button type="submit">Submit Review</button>
      </form>
    </div>
  );
}

export default ReviewForm;

================
File: src/components/ReviewList.js
================
// src/components/ReviewList.js
import React, { useState, useEffect } from 'react';
import api from '../utils/api';

function ReviewList({ restaurantId }) {
  const [reviews, setReviews] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchReviews = async () => {
      try {
        setLoading(true);
        const response = await api.get(`/reviews/restaurant/${restaurantId}`);
        setReviews(response.data);
        setLoading(false);
      } catch (err) {
        setError('Failed to fetch reviews. Please try again later.');
        setLoading(false);
        console.error('Error fetching reviews:', err);
      }
    };

    fetchReviews();
  }, [restaurantId]);

  if (loading) return <div>Loading reviews...</div>;
  if (error) return <div>{error}</div>;

  return (
    <div className="review-list">
      <h3>Customer Reviews</h3>
      {reviews.length === 0 ? (
        <p>No reviews yet. Be the first to review!</p>
      ) : (
        reviews.map(review => (
          <div key={review._id} className="review">
            <p>Rating: {review.rating}/5</p>
            <p>{review.text}</p>
            <p>Sentiment: {review.sentiment > 0 ? 'Positive' : review.sentiment < 0 ? 'Negative' : 'Neutral'}</p>
            <small>Date: {new Date(review.createdAt).toLocaleDateString()}</small>
          </div>
        ))
      )}
    </div>
  );
}

export default ReviewList;

================
File: src/context/AuthContext.js
================
import React, { createContext, useState, useContext } from 'react';

const AuthContext = createContext();

export const useAuth = () => useContext(AuthContext);

export const AuthProvider = ({ children }) => {
  const [user, setUser] = useState(null);

  const login = (userData) => {
    setUser(userData);
  };

  const logout = () => {
    setUser(null);
  };

  return (
    <AuthContext.Provider value={{ user, login, logout }}>
      {children}
    </AuthContext.Provider>
  );
};

================
File: src/utils/api.js
================
import axios from 'axios';

const api = axios.create({
  baseURL: 'http://localhost:5001/api', // Adjust this to match your backend URL
  headers: {
    'Content-Type': 'application/json',
  },
});

// Add a request interceptor to include the auth token
api.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem('token');
    if (token) {
      config.headers['Authorization'] = `Bearer ${token}`;
    }
    return config;
  },
  (error) => {
    return Promise.reject(error);
  }
);

export default api;

================
File: src/App.js
================
import React from 'react';
import { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';
import { AuthProvider } from './context/AuthContext';
import QRScanner from './components/QRscanner';
import ReviewForm from './components/ReviewForm';
import RestaurantDashboard from './components/RestaurantDashboard';
import CouponSystem from './components/CouponSystem';
import Header from './components/Header';
import Footer from './components/Footer';

function App() {
  return (
    <AuthProvider>
      <Router>
        <div className="flex flex-col min-h-screen bg-gray-100">
          <Header />
          <main className="flex-grow container mx-auto px-4 py-8">
            <nav className="mb-4">
              <ul className="flex space-x-4">
                <li><Link to="/" className="text-blue-500 hover:text-blue-700">Home</Link></li>
                <li><Link to="/login" className="text-blue-500 hover:text-blue-700">Login</Link></li>
                <li><Link to="/register" className="text-blue-500 hover:text-blue-700">Register</Link></li>
              </ul>
            </nav>
            <Routes>
              <Route path="/" element={<QRScanner />} />
              <Route path="/review/:restaurantId" element={<ReviewForm />} />
              <Route path="/dashboard/:restaurantId" element={<RestaurantDashboard />} />
              <Route path="/coupons" element={<CouponSystem />} />
            </Routes>
          </main>
          <Footer />
        </div>
      </Router>
    </AuthProvider>
  );
}

export default App;

================
File: src/index.css
================
@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';

================
File: src/index.js
================
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

================
File: package.json
================
{
    "name": "restaurant-review-frontend",
    "version": "1.0.0",
    "private": true,
    "dependencies": {
        "autoprefixer": "^10.4.20",
        "axios": "^1.7.4",
        "postcss": "^8.4.41",
        "qrcode.react": "^3.1.0",
        "react": "^18.2.0",
        "react-dom": "^18.2.0",
        "react-qr-code": "^2.0.12",
        "react-router-dom": "^6.26.1",
        "react-scripts": "^5.0.1",
        "react-webcam": "^7.2.0",
        "tailwindcss": "^3.4.10"
    },
    "scripts": {
        "start": "react-scripts start",
        "build": "react-scripts build",
        "test": "react-scripts test",
        "eject": "react-scripts eject"
    },
    "eslintConfig": {
        "extends": [
            "react-app",
            "react-app/jest"
        ]
    },
    "browserslist": {
        "production": [
            ">0.2%",
            "not dead",
            "not op_mini all"
        ],
        "development": [
            "last 1 chrome version",
            "last 1 firefox version",
            "last 1 safari version"
        ]
    }
}
